{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"TermProject.ipynb의 사본","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMpqLDV5G0AiQdPpXOQTnyv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AIdHg6p_Unyc","executionInfo":{"status":"ok","timestamp":1653475621495,"user_tz":-540,"elapsed":19238,"user":{"displayName":"정준모","userId":"02195039556837670251"}},"outputId":"36818b19-0d96-4048-f6ef-c205e226524a"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":2,"metadata":{"id":"UbtIrpSbeUUi","executionInfo":{"status":"ok","timestamp":1653476111546,"user_tz":-540,"elapsed":3046,"user":{"displayName":"정준모","userId":"02195039556837670251"}}},"outputs":[],"source":["import numpy as np\n","import os\n","from sklearn.metrics import confusion_matrix\n","import seaborn as sn; sn.set(font_scale=1.4)\n","from sklearn.utils import shuffle           \n","import matplotlib.pyplot as plt             \n","import cv2                                 \n","import tensorflow as tf\n","import pandas as pd                \n","from tqdm import tqdm"]},{"cell_type":"code","source":["class_names = ['bag', 'bed', 'chair', 'coffeetable', 'cup', 'kitchentools', 'lamp', 'laptop', 'LivingSofa', 'pot', 'shoe']\n","class_names_label = {class_name:i for i, class_name in enumerate(class_names)}\n","\n","nb_classes = len(class_names)\n","\n","IMAGE_SIZE = (150, 150) \n","\n","print(class_names_label)\n","print(nb_classes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kd36QaLKT4nj","executionInfo":{"status":"ok","timestamp":1653476113778,"user_tz":-540,"elapsed":333,"user":{"displayName":"정준모","userId":"02195039556837670251"}},"outputId":"5c8a5ff5-e3a4-4dd3-c29a-a378f32b4b60"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["{'bag': 0, 'bed': 1, 'chair': 2, 'coffeetable': 3, 'cup': 4, 'kitchentools': 5, 'lamp': 6, 'laptop': 7, 'LivingSofa': 8, 'pot': 9, 'shoe': 10}\n","11\n"]}]},{"cell_type":"code","source":["def load_data():\n","\n","  datasets = ['/content/drive/MyDrive/2022_AI활용 표현과 문제해결/TermProject/Term_Dataset/train', '/content/drive/MyDrive/2022_AI활용 표현과 문제해결/TermProject/Term_Dataset/val'] \n","\n","  csv_file = pd.read_csv('/content/drive/MyDrive/2022_AI활용 표현과 문제해결/TermProject/Term_Dataset/train_data.csv')\n","  csv_file2 = pd.read_csv('/content/drive/MyDrive/2022_AI활용 표현과 문제해결/TermProject/Term_Dataset/val_data.csv')\n","\n","  output = []\n","\n","  counting = 0\n","\n","  for dataset in datasets:\n","\n","    images = []\n","    labels = []\n","\n","    output = []\n","    \n","    for file in tqdm(os.listdir(os.path.join(dataset))):\n","\n","      img_path = os.path.join(os.path.join(dataset), file)\n","      file_name = img_path.split('/')[8]\n","          \n","      image = cv2.imread(img_path)\n","      image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n","      image = cv2.resize(image, IMAGE_SIZE) \n","\n","      tmp = csv_file['file_name']\n","      tmp2 = csv_file['class']\n","\n","      if(counting != 0 ):\n","        tmp = csv_file2['file_name']\n","        tmp2 = csv_file2['class']\n","      \n","      counting = counting + 1\n","\n","      cnt = 0\n","\n","      for name in tmp:\n","        if(file_name == name):        \n","          break\n","        cnt = cnt + 1\n","      \n","      cnt2 = 0\n","\n","      class_name = 'sdA'\n","      print(file_name)\n","\n","      for name in tmp2:\n","        if(cnt2 == cnt):\n","          class_name = name\n","          break\n","        cnt2 = cnt2 + 1      \n","      \n","      print(class_name)\n","      label = class_names_label[class_name]\n","\n","      images.append(image)\n","      labels.append(label)\n","\n","    images = np.array(images, dtype = 'float32')\n","    labels = np.array(labels, dtype = 'int32')\n","\n","    output.append((images, labels))\n","\n","  return output\n","\n","    \n","\n","    \n","\n","    \n","    \n","    \n","    "],"metadata":{"id":"ylk5hlZ3Vw22","executionInfo":{"status":"ok","timestamp":1653476782733,"user_tz":-540,"elapsed":348,"user":{"displayName":"정준모","userId":"02195039556837670251"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["(train_images, train_labels), (test_images, test_labels) = load_data() "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"qvbb1ToneNNu","executionInfo":{"status":"error","timestamp":1653476788450,"user_tz":-540,"elapsed":3792,"user":{"displayName":"정준모","userId":"02195039556837670251"}},"outputId":"d1011a68-dc27-4b88-cc5c-768bfee9de2f"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["  0%|          | 4/864 [00:00<00:26, 32.94it/s]"]},{"output_type":"stream","name":"stdout","text":["img00000.png\n","bag\n","img00001.png\n","bag\n","img00002.png\n","bag\n","img00016.png\n","bed\n","img00014.png\n","bed\n","img00009.png\n","bag\n","img00018.png\n","bed\n"]},{"output_type":"stream","name":"stderr","text":["\r  1%|          | 8/864 [00:00<00:26, 32.75it/s]"]},{"output_type":"stream","name":"stdout","text":["img00010.png\n","bag\n","img00005.png\n","bag\n","img00007.png\n","bag\n","img00003.png\n","bag\n"]},{"output_type":"stream","name":"stderr","text":["  2%|▏         | 15/864 [00:00<00:42, 20.12it/s]"]},{"output_type":"stream","name":"stdout","text":["img00004.png\n","bag\n","img00011.png\n","bed\n","img00012.png\n","bed\n","img00006.png\n","bag\n"]},{"output_type":"stream","name":"stderr","text":["  2%|▏         | 21/864 [00:00<00:39, 21.43it/s]"]},{"output_type":"stream","name":"stdout","text":["img00008.png\n","bag\n","img00015.png\n","bed\n","img00013.png\n","bed\n","img00017.png\n","bed\n","img00029.png\n","chair\n","img00044.png\n","cup\n"]},{"output_type":"stream","name":"stderr","text":["  3%|▎         | 30/864 [00:01<00:27, 30.15it/s]"]},{"output_type":"stream","name":"stdout","text":["img00034.png\n","coffeetable\n","img00026.png\n","chair\n","img00024.png\n","chair\n","img00030.png\n","chair\n","img00020.png\n","bed\n","img00031.png\n","chair\n","img00039.png\n","coffeetable\n","img00025.png\n","chair\n","img00041.png\n","coffeetable\n"]},{"output_type":"stream","name":"stderr","text":["\r  4%|▍         | 34/864 [00:01<00:26, 31.62it/s]"]},{"output_type":"stream","name":"stdout","text":["img00033.png\n","coffeetable\n","img00038.png\n","coffeetable\n","img00023.png\n","chair\n","img00043.png\n","coffeetable\n","img00027.png\n","chair\n","img00019.png\n","bed\n","img00021.png\n","bed\n","img00037.png\n","coffeetable\n","img00028.png\n","chair\n"]},{"output_type":"stream","name":"stderr","text":["  5%|▌         | 46/864 [00:01<00:21, 37.34it/s]"]},{"output_type":"stream","name":"stdout","text":["img00042.png\n","coffeetable\n","img00022.png\n","chair\n","img00035.png\n","coffeetable\n","img00040.png\n","coffeetable\n","img00032.png\n","chair\n","img00036.png\n","coffeetable\n","img00055.png\n","kitchentools\n","img00047.png\n","cup\n"]},{"output_type":"stream","name":"stderr","text":["\r  6%|▌         | 50/864 [00:01<00:27, 30.12it/s]"]},{"output_type":"stream","name":"stdout","text":["img00046.png\n","cup\n","img00059.png\n","kitchentools\n","img00048.png\n","cup\n","img00054.png\n","cup\n"]},{"output_type":"stream","name":"stderr","text":["\r  6%|▋         | 54/864 [00:01<00:31, 25.64it/s]"]},{"output_type":"stream","name":"stdout","text":["img00060.png\n","kitchentools\n","img00065.png\n","kitchentools\n","img00064.png\n","kitchentools\n","img00051.png\n","cup\n"]},{"output_type":"stream","name":"stderr","text":["  7%|▋         | 60/864 [00:02<00:35, 22.44it/s]"]},{"output_type":"stream","name":"stdout","text":["img00058.png\n","kitchentools\n","img00052.png\n","cup\n","img00050.png\n","cup\n","img00049.png\n","cup\n","img00062.png\n","kitchentools\n"]},{"output_type":"stream","name":"stderr","text":["\r  7%|▋         | 63/864 [00:02<00:37, 21.50it/s]"]},{"output_type":"stream","name":"stdout","text":["img00045.png\n","cup\n","img00053.png\n","cup\n","img00063.png\n","kitchentools\n","img00056.png\n","kitchentools\n"]},{"output_type":"stream","name":"stderr","text":["  8%|▊         | 72/864 [00:02<00:30, 26.33it/s]"]},{"output_type":"stream","name":"stdout","text":["img00061.png\n","kitchentools\n","img00057.png\n","kitchentools\n","img00087.png\n","laptop\n","img00078.png\n","lamp\n","img00081.png\n","lamp\n","img00068.png\n","lamp\n","img00084.png\n","lamp\n","img00067.png\n","lamp\n"]},{"output_type":"stream","name":"stderr","text":[" 10%|▉         | 85/864 [00:02<00:18, 41.98it/s]"]},{"output_type":"stream","name":"stdout","text":["img00071.png\n","lamp\n","img00066.png\n","lamp\n","img00083.png\n","lamp\n","img00089.png\n","laptop\n","img00076.png\n","lamp\n","img00079.png\n","lamp\n","img00072.png\n","lamp\n","img00080.png\n","lamp\n","img00090.png\n","laptop\n","img00075.png\n","lamp\n","img00091.png\n","laptop\n","img00088.png\n","laptop\n","img00070.png\n","lamp\n","img00074.png\n","lamp\n","img00092.png\n","laptop\n","img00093.png\n","laptop\n","img00085.png\n","laptop\n"]},{"output_type":"stream","name":"stderr","text":[" 12%|█▏        | 107/864 [00:03<00:10, 71.26it/s]"]},{"output_type":"stream","name":"stdout","text":["img00069.png\n","lamp\n","img00077.png\n","lamp\n","img00073.png\n","lamp\n","img00082.png\n","lamp\n","img00086.png\n","laptop\n","img00106.png\n","pot\n","img00117.png\n","pot\n","img00095.png\n","LivingSofa\n","img00105.png\n","pot\n","img00099.png\n","LivingSofa\n","img00115.png\n","pot\n","img00112.png\n","pot\n","img00113.png\n","pot\n","img00110.png\n","pot\n","img00111.png\n","pot\n","img00121.png\n","shoe\n","img00097.png\n","LivingSofa\n","img00118.png\n","pot\n","img00119.png\n","shoe\n","img00116.png\n","pot\n","img00114.png\n","pot\n","img00100.png\n","LivingSofa\n","img00094.png\n","LivingSofa\n","img00096.png\n","LivingSofa\n","img00102.png\n","LivingSofa\n","img00120.png\n","shoe\n"]},{"output_type":"stream","name":"stderr","text":[" 15%|█▍        | 128/864 [00:03<00:09, 73.65it/s]"]},{"output_type":"stream","name":"stdout","text":["img00109.png\n","pot\n","img00098.png\n","LivingSofa\n","img00108.png\n","pot\n","img00122.png\n","shoe\n","img00104.png\n","LivingSofa\n","img00103.png\n","LivingSofa\n","img00107.png\n","pot\n","img00101.png\n","LivingSofa\n","img00128.png\n","shoe\n","img00132.png\n","shoe\n","img00127.png\n","shoe\n","img00126.png\n","shoe\n","img00125.png\n","shoe\n"]},{"output_type":"stream","name":"stderr","text":["\r 15%|█▍        | 128/864 [00:03<00:20, 35.88it/s]"]},{"output_type":"stream","name":"stdout","text":["img00133.png\n","sdA\n"]},{"output_type":"stream","name":"stderr","text":["\n"]},{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-15-4127767cade2>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;34m(\u001b[0m\u001b[0mtrain_images\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_labels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mtest_images\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_labels\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mload_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-14-77395c31277d>\u001b[0m in \u001b[0;36mload_data\u001b[0;34m()\u001b[0m\n\u001b[1;32m     54\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     55\u001b[0m       \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mclass_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 56\u001b[0;31m       \u001b[0mlabel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mclass_names_label\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mclass_name\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     57\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     58\u001b[0m       \u001b[0mimages\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimage\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'sdA'"]}]},{"cell_type":"code","source":["print(train_images)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-TKqDpozr8mM","executionInfo":{"status":"ok","timestamp":1653473575158,"user_tz":-540,"elapsed":521,"user":{"displayName":"정준모","userId":"02195039556837670251"}},"outputId":"6f71ae15-4815-4783-8946-fb08ac0d3207"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[array([[[[ 70.,  70.,  70.],\n","         [ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.],\n","         [ 70.,  70.,  70.]],\n","\n","        [[ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.],\n","         ...,\n","         [ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]],\n","\n","        [[ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.]],\n","\n","        ...,\n","\n","        [[ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]],\n","\n","        [[ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]],\n","\n","        [[ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]]],\n","\n","\n","       [[[ 70.,  70.,  70.],\n","         [ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.],\n","         [ 70.,  70.,  70.]],\n","\n","        [[ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.],\n","         ...,\n","         [ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]],\n","\n","        [[ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.]],\n","\n","        ...,\n","\n","        [[ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]],\n","\n","        [[ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]],\n","\n","        [[ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]]],\n","\n","\n","       [[[ 70.,  70.,  70.],\n","         [ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.],\n","         [ 70.,  70.,  70.]],\n","\n","        [[ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.],\n","         ...,\n","         [ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]],\n","\n","        [[ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.]],\n","\n","        ...,\n","\n","        [[ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]],\n","\n","        [[ 70.,  70.,  70.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]],\n","\n","        [[ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 70.,  70.,  70.],\n","         ...,\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.],\n","         [ 71.,  71.,  71.]]],\n","\n","\n","       ...,\n","\n","\n","       [[[174., 174., 174.],\n","         [176., 176., 176.],\n","         [175., 175., 175.],\n","         ...,\n","         [162., 162., 162.],\n","         [161., 161., 161.],\n","         [159., 159., 159.]],\n","\n","        [[175., 175., 175.],\n","         [176., 176., 176.],\n","         [176., 176., 176.],\n","         ...,\n","         [160., 160., 160.],\n","         [160., 160., 160.],\n","         [163., 163., 163.]],\n","\n","        [[174., 174., 174.],\n","         [177., 177., 177.],\n","         [175., 175., 175.],\n","         ...,\n","         [163., 163., 163.],\n","         [162., 162., 162.],\n","         [161., 161., 161.]],\n","\n","        ...,\n","\n","        [[196., 196., 195.],\n","         [194., 193., 193.],\n","         [193., 193., 193.],\n","         ...,\n","         [179., 179., 179.],\n","         [181., 181., 181.],\n","         [180., 180., 180.]],\n","\n","        [[194., 194., 194.],\n","         [192., 192., 192.],\n","         [193., 193., 193.],\n","         ...,\n","         [180., 180., 180.],\n","         [178., 178., 178.],\n","         [179., 179., 179.]],\n","\n","        [[194., 194., 194.],\n","         [192., 192., 192.],\n","         [194., 194., 194.],\n","         ...,\n","         [180., 180., 180.],\n","         [178., 178., 178.],\n","         [178., 178., 178.]]],\n","\n","\n","       [[[162., 162., 162.],\n","         [162., 162., 162.],\n","         [162., 162., 162.],\n","         ...,\n","         [157., 157., 157.],\n","         [156., 156., 156.],\n","         [155., 155., 155.]],\n","\n","        [[162., 162., 162.],\n","         [164., 164., 164.],\n","         [164., 164., 164.],\n","         ...,\n","         [156., 156., 156.],\n","         [156., 156., 156.],\n","         [158., 158., 158.]],\n","\n","        [[162., 162., 162.],\n","         [164., 164., 164.],\n","         [163., 163., 163.],\n","         ...,\n","         [157., 157., 157.],\n","         [157., 157., 157.],\n","         [156., 156., 156.]],\n","\n","        ...,\n","\n","        [[195., 195., 195.],\n","         [194., 193., 193.],\n","         [192., 192., 192.],\n","         ...,\n","         [184., 184., 184.],\n","         [185., 185., 185.],\n","         [184., 184., 184.]],\n","\n","        [[194., 194., 194.],\n","         [192., 192., 192.],\n","         [193., 193., 193.],\n","         ...,\n","         [183., 183., 183.],\n","         [183., 183., 183.],\n","         [183., 183., 183.]],\n","\n","        [[194., 193., 193.],\n","         [191., 191., 191.],\n","         [194., 194., 194.],\n","         ...,\n","         [184., 184., 184.],\n","         [182., 182., 182.],\n","         [183., 183., 183.]]],\n","\n","\n","       [[[185., 185., 185.],\n","         [184., 184., 184.],\n","         [182., 182., 182.],\n","         ...,\n","         [202., 202., 202.],\n","         [200., 200., 200.],\n","         [199., 199., 199.]],\n","\n","        [[185., 185., 185.],\n","         [184., 184., 184.],\n","         [182., 182., 182.],\n","         ...,\n","         [199., 199., 199.],\n","         [199., 199., 199.],\n","         [204., 204., 204.]],\n","\n","        [[182., 182., 182.],\n","         [183., 183., 183.],\n","         [184., 184., 184.],\n","         ...,\n","         [200., 200., 200.],\n","         [200., 200., 200.],\n","         [199., 199., 199.]],\n","\n","        ...,\n","\n","        [[168., 168., 168.],\n","         [167., 167., 167.],\n","         [165., 165., 165.],\n","         ...,\n","         [172., 172., 172.],\n","         [174., 174., 174.],\n","         [174., 174., 174.]],\n","\n","        [[167., 167., 167.],\n","         [165., 165., 165.],\n","         [168., 168., 168.],\n","         ...,\n","         [172., 172., 172.],\n","         [171., 171., 171.],\n","         [170., 170., 170.]],\n","\n","        [[167., 167., 167.],\n","         [165., 165., 165.],\n","         [167., 167., 167.],\n","         ...,\n","         [172., 172., 172.],\n","         [170., 170., 170.],\n","         [172., 172., 172.]]]], dtype=float32)]\n"]}]},{"cell_type":"code","source":["print(train_labels)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rbIKZdX9tHQ9","executionInfo":{"status":"ok","timestamp":1653473582492,"user_tz":-540,"elapsed":6,"user":{"displayName":"정준모","userId":"02195039556837670251"}},"outputId":"abc42def-41df-4a68-c0c8-b821869fdcf1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n","        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n","        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n","        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,\n","        1,  0,  1,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,\n","        1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n","        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n","        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n","        1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,\n","        2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  1,  2,\n","        2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,\n","        2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  3,  3,\n","        2,  2,  3,  3,  3,  3,  2,  2,  3,  2,  3,  2,  3,  2,  2,  3,  3,\n","        2,  2,  2,  3,  3,  2,  3,  2,  2,  3,  3,  3,  3,  3,  3,  3,  3,\n","        3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,\n","        3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,\n","        3,  3,  3,  3,  3,  3,  3,  3,  4,  3,  3,  3,  3,  3,  3,  3,  3,\n","        4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,\n","        4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,\n","        4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,\n","        4,  4,  4,  4,  4,  4,  4,  5,  4,  4,  5,  5,  4,  4,  4,  5,  5,\n","        4,  4,  5,  4,  5,  5,  5,  5,  4,  4,  4,  4,  4,  5,  5,  5,  5,\n","        5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,\n","        5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,\n","        5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,\n","        5,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,\n","        6,  6,  5,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,\n","        6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,\n","        6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,\n","        6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,\n","        6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,\n","        6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,\n","        6,  6,  7,  6,  7,  6,  6,  6,  7,  6,  7,  7,  7,  6,  7,  7,  6,\n","        7,  6,  7,  7,  6,  7,  7,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,\n","        7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,\n","        7,  7,  8,  7,  7,  7,  7,  7,  7,  7,  7,  8,  8,  7,  7,  8,  7,\n","        7,  7,  7,  8,  8,  7,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,\n","        8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,\n","        8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,\n","        8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  9,  8,  8,  9,  8,  9,  8,\n","        9,  9,  8,  9,  9,  9,  9,  8,  9,  9,  8,  9,  8,  8,  8,  9,  9,\n","        8,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,\n","        9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,\n","        9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,\n","        9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,\n","        9,  9, 10,  9,  9,  9, 10,  9,  9,  9,  9, 10, 10, 10, 10, 10, 10,\n","       10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n","       10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n","       10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n","       10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n","       10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],\n","      dtype=int32)]\n"]}]},{"cell_type":"code","source":["train_images, train_labels = shuffle(train_images, train_labels, random_state=25)"],"metadata":{"id":"-NtW7UoFtNPu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(type(train_images))\n","print(type(train_labels))\n","\n","\n","train_images = np.asarray(train_images, dtype=np.float32)\n","train_labels = np.asarray(train_labels, dtype=np.int32)\n","\n","print(type(train_images))\n","print(type(train_labels))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JcEhZv-MtXPS","executionInfo":{"status":"ok","timestamp":1653474279797,"user_tz":-540,"elapsed":9,"user":{"displayName":"정준모","userId":"02195039556837670251"}},"outputId":"00f3d080-f77a-465b-c4f3-86c1125b3f3a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'list'>\n","<class 'list'>\n","<class 'numpy.ndarray'>\n","<class 'numpy.ndarray'>\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","_, train_counts = np.unique(train_labels, return_counts=True)\n","\n","pd.DataFrame({'train': train_counts}, \n","             index=class_names\n","            ).plot.bar()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":352},"id":"TZFxBaNcwLif","executionInfo":{"status":"ok","timestamp":1653474438462,"user_tz":-540,"elapsed":1081,"user":{"displayName":"정준모","userId":"02195039556837670251"}},"outputId":"61adb3a1-220f-43ac-da5f-6373b8936bb5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["train_images = train_images / 255.0 "],"metadata":{"id":"v48U22LBwk20"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def display_random_image(class_names, images, labels):\n","    \"\"\"\n","        Display a random image from the images array and its correspond label from the labels array.\n","    \"\"\"\n","    \n","    index = np.random.randint(images.shape[0])\n","    plt.figure()\n","    #plt.imshow(images[index])\n","    plt.xticks([])\n","    plt.yticks([])\n","    plt.grid(False)\n","    #plt.title('Image #{} : '.format(index) + class_names[labels[index]])\n","    plt.show()"],"metadata":{"id":"04vEfwJqwljX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["display_random_image(class_names, train_images, train_labels)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":248},"id":"gWvYFVcrwqPM","executionInfo":{"status":"ok","timestamp":1653475131355,"user_tz":-540,"elapsed":5,"user":{"displayName":"정준모","userId":"02195039556837670251"}},"outputId":"4549c784-6235-41ad-f911-f68d92b6e52f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAV0AAADnCAYAAAC9roUQAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAADWklEQVR4nO3aIQ4CQRAAwbsNDsX/H4nC3vACcgjSJFBld8SoFpPdZ2Y2ABLr2wsA/BPRBQiJLkBIdAFCogsQEl2A0OVs4H5/bMfhVxnAO9bat9vt+vL9NLrHMaIL8CHOCwAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgJDoAoREFyAkugAh0QUIiS5ASHQBQqILEBJdgNDlbGCtvdgD4CecNXOfmYl2Afh7zgsAIdEFCIkuQEh0AUKiCxASXYDQE0bRFcucC5ElAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"code","source":["model = tf.keras.Sequential([\n","    tf.keras.layers.Conv2D(32, (3, 3), activation = 'relu', input_shape = (150, 150, 3)), \n","    tf.keras.layers.MaxPooling2D(2,2),\n","    tf.keras.layers.Conv2D(32, (3, 3), activation = 'relu'),\n","    tf.keras.layers.MaxPooling2D(2,2),\n","    tf.keras.layers.Flatten(),\n","    tf.keras.layers.Dense(128, activation=tf.nn.relu),\n","    tf.keras.layers.Dense(6, activation=tf.nn.softmax)\n","])"],"metadata":{"id":"sJtKrfU1zrsF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.compile(optimizer = 'adam', loss = 'sparse_categorical_crossentropy', metrics=['accuracy'])"],"metadata":{"id":"YjQOt_TEztiT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history = model.fit(train_images, train_labels, batch_size=128, epochs=20, validation_split = 0.2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":343},"id":"or3Bn_ByzxWw","executionInfo":{"status":"error","timestamp":1653475325656,"user_tz":-540,"elapsed":385,"user":{"displayName":"정준모","userId":"02195039556837670251"}},"outputId":"38390b20-7040-4f2d-ce6e-c434d04c405e"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-130-16b8fc644a75>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mhistory\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_images\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_labels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m128\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m20\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_split\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0.2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 67\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     68\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m       \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/data_adapter.py\u001b[0m in \u001b[0;36mtrain_validation_split\u001b[0;34m(arrays, validation_split)\u001b[0m\n\u001b[1;32m   1499\u001b[0m         \u001b[0;34m\"`validation_split={validation_split}`. Either provide more data, or a \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1500\u001b[0m         \"different value for the `validation_split` argument.\" .format(\n\u001b[0;32m-> 1501\u001b[0;31m             batch_dim=batch_dim, validation_split=validation_split))\n\u001b[0m\u001b[1;32m   1502\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1503\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstart\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Training data contains 1 samples, which is not sufficient to split it into a validation and training set as specified by `validation_split=0.2`. Either provide more data, or a different value for the `validation_split` argument."]}]},{"cell_type":"code","source":[""],"metadata":{"id":"sivfznjGzzZX"},"execution_count":null,"outputs":[]}]}